# Ollama URL for the backend to connect
# The path '/ollama' will be redirected to the specified backend URL
OLLAMA_BASE_URL='http://localhost:11434'

# AUTOMATIC1111_BASE_URL="http://localhost:7860"

# DO NOT TRACK
SCARF_NO_ANALYTICS=true
DO_NOT_TRACK=true
ANONYMIZED_TELEMETRY=false

# --- Open WebUI General Settings (Defaults from Docs) ---
# Ref: https://docs.openwebui.com/getting-started/env-configuration

# URL where Open WebUI is reachable (PersistentConfig)
WEBUI_URL=http://localhost:3000
# Toggle user account creation (PersistentConfig)
ENABLE_SIGNUP=True
# Toggles login form elements (PersistentConfig)
ENABLE_LOGIN_FORM=True
# Default locale (PersistentConfig)
DEFAULT_LOCALE=en
# Default Language Model (PersistentConfig)
DEFAULT_MODELS=
# Default role for new users: pending | user | admin (PersistentConfig)
DEFAULT_USER_ROLE=pending
# Enable channel support (PersistentConfig)
ENABLE_CHANNELS=False
# Webhook for Discord/Slack/Teams integration (PersistentConfig)
WEBHOOK_URL=
# Controls whether admin users can export data
ENABLE_ADMIN_EXPORT=True
# Enables admin users to access all chats
ENABLE_ADMIN_CHAT_ACCESS=True
# Enables or disables user webhooks (PersistentConfig)
ENABLE_USER_WEBHOOKS=True
# Toggles showing admin user details (PersistentConfig)
SHOW_ADMIN_DETAILS=True
# Admin email shown by SHOW_ADMIN_DETAILS (PersistentConfig)
ADMIN_EMAIL=
# Environment setting: dev | prod (Default depends on execution context)
ENV=dev
# If False, PersistentConfig variables act as regular variables
ENABLE_PERSISTENT_CONFIG=True
# Sets WEBUI_NAME but polls api.openwebui.com for metadata
CUSTOM_NAME=
# Main WebUI name
WEBUI_NAME=Open WebUI
# Port to run Open WebUI from (use --port flag if running via `open-webui serve`)
PORT=8080
# Saves chat chunks in real-time (increases latency)
ENABLE_REALTIME_CHAT_SAVE=False
# Bypasses model access control
BYPASS_MODEL_ACCESS_CONTROL=False
# Git SHA of the build for releases
WEBUI_BUILD_HASH=dev-build
# List of banners to show users (JSON list of dicts, see docs) (PersistentConfig)
WEBUI_BANNERS=
# Build Docker image with CUDA support (for local Whisper/embeddings)
USE_CUDA_DOCKER=False
# External PWA manifest URL
EXTERNAL_PWA_MANIFEST_URL=
# Enable chat title generation (PersistentConfig)
ENABLE_TITLE_GENERATION=True
# License key (Enterprise users only) (PersistentConfig)
LICENSE_KEY=
# SSL assert fingerprint (PersistentConfig)
SSL_ASSERT_FINGERPRINT=

# --- AIOHTTP Client ---
# Timeout in seconds for AIOHTTP client (Ollama/OpenAI connections)
AIOHTTP_CLIENT_TIMEOUT=300
# Timeout for fetching the model list
AIOHTTP_CLIENT_TIMEOUT_MODEL_LIST=10
# Timeout for fetching OpenAI model list (defaults to AIOHTTP_CLIENT_TIMEOUT_MODEL_LIST)
AIOHTTP_CLIENT_TIMEOUT_OPENAI_MODEL_LIST=

# --- Directories ---
# Base directory for data storage (uploads, cache, vector DB)
DATA_DIR=./data
# Directory for fonts (defaults based on DATA_DIR)
FONTS_DIR=
# Location of built frontend files
FRONTEND_BUILD_DIR=../build
# Directory for static files (favicon)
STATIC_DIR=./static

# --- Ollama ---
# Enable Ollama APIs (PersistentConfig)
ENABLE_OLLAMA_API=True
# Ollama backend URL (overridden by OLLAMA_BASE_URLS if set)
# Default depends on context (Docker/K8s), this is backend default
# OLLAMA_BASE_URL=http://localhost:11434 # Already set by user
# Load-balanced Ollama hosts, separated by ; (PersistentConfig)
OLLAMA_BASE_URLS=
# Build Docker image with bundled Ollama
USE_OLLAMA_DOCKER=False
# If set, assumes Helm chart deployment and sets OLLAMA_BASE_URL accordingly
K8S_FLAG=False

# --- OpenAI ---
# Enable OpenAI APIs (PersistentConfig)
ENABLE_OPENAI_API=True
# OpenAI base API URL (PersistentConfig)
# OPENAI_API_BASE_URL=https://api.openai.com/v1 # Already set by user
# Balanced OpenAI base API URLs, semicolon-separated (PersistentConfig)
OPENAI_API_BASE_URLS=
# OpenAI API key (PersistentConfig)
# OPENAI_API_KEY= # Already set by user
# Multiple OpenAI API keys, semicolon-separated (PersistentConfig)
OPENAI_API_KEYS=

# --- Tasks ---
# Default model for tasks (title/web search gen) with Ollama (PersistentConfig)
TASK_MODEL=
# Default model for tasks with OpenAI endpoints (PersistentConfig)
TASK_MODEL_EXTERNAL=
# Prompt template for chat title generation (See docs for complex default) (PersistentConfig)
TITLE_GENERATION_PROMPT_TEMPLATE=
# Prompt template for tool function calling (See docs for complex default) (PersistentConfig)
TOOLS_FUNCTION_CALLING_PROMPT_TEMPLATE=

# --- Code Execution ---
# Enable code execution (PersistentConfig)
ENABLE_CODE_EXECUTION=True
# Code execution engine: pyodide | jupyter (PersistentConfig)
CODE_EXECUTION_ENGINE=pyodide
# Jupyter URL for code execution (PersistentConfig)
CODE_EXECUTION_JUPYTER_URL=
# Jupyter auth method (PersistentConfig)
CODE_EXECUTION_JUPYTER_AUTH=
# Jupyter auth token (PersistentConfig)
CODE_EXECUTION_JUPYTER_AUTH_TOKEN=
# Jupyter auth password (PersistentConfig)
CODE_EXECUTION_JUPYTER_AUTH_PASSWORD=
# Timeout for Jupyter code execution (PersistentConfig)
CODE_EXECUTION_JUPYTER_TIMEOUT=

# --- Code Interpreter ---
# Enable code interpreter (PersistentConfig)
ENABLE_CODE_INTERPRETER=True
# Code interpreter engine: pyodide | jupyter (PersistentConfig)
CODE_INTERPRETER_ENGINE=pyodide
# Prompt template for code interpreter (See docs for complex default) (PersistentConfig)
CODE_INTERPRETER_PROMPT_TEMPLATE=
# Jupyter URL for code interpreter (PersistentConfig)
CODE_INTERPRETER_JUPYTER_URL=
# Jupyter auth method (PersistentConfig)
CODE_INTERPRETER_JUPYTER_AUTH=
# Jupyter auth token (PersistentConfig)
CODE_INTERPRETER_JUPYTER_AUTH_TOKEN=
# Jupyter auth password (PersistentConfig)
CODE_INTERPRETER_JUPYTER_AUTH_PASSWORD=
# Timeout for Jupyter code interpreter (PersistentConfig)
CODE_INTERPRETER_JUPYTER_TIMEOUT=

# --- Direct Connections (OpenAPI/MCPO Tool Servers) ---
# Enable direct connections (PersistentConfig)
ENABLE_DIRECT_CONNECTIONS=True

# --- Autocomplete ---
# Enable autocomplete generation (PersistentConfig)
ENABLE_AUTOCOMPLETE_GENERATION=True
# Max input length for autocomplete generation (PersistentConfig)
AUTOCOMPLETE_GENERATION_INPUT_MAX_LENGTH=-1
# Prompt template for autocomplete generation (See docs for complex default) (PersistentConfig)
AUTOCOMPLETE_GENERATION_PROMPT_TEMPLATE=

# --- Evaluation Arena Model ---
# Enable evaluation arena models (PersistentConfig)
ENABLE_EVALUATION_ARENA_MODELS=True
# Enable message rating feature (PersistentConfig)
ENABLE_MESSAGE_RATING=True
# Show share to community button (PersistentConfig)
ENABLE_COMMUNITY_SHARING=True

# --- Tags Generation ---
# Enable tag generation (PersistentConfig)
ENABLE_TAGS_GENERATION=True
# Prompt template for tag generation (See docs for complex default) (PersistentConfig)
TAGS_GENERATION_PROMPT_TEMPLATE=

# --- API Key Endpoint Restrictions ---
# Enable API key authentication (PersistentConfig)
ENABLE_API_KEY=True
# Enable API key endpoint restrictions (PersistentConfig)
ENABLE_API_KEY_ENDPOINT_RESTRICTIONS=False
# Comma-separated list of allowed API endpoints (PersistentConfig)
API_KEY_ALLOWED_ENDPOINTS=
# JWT expiration time (e.g., 1h, 30m, -1 for no expiration) (PersistentConfig)
JWT_EXPIRES_IN=-1

# --- Security Variables ---
# Forward user info headers (X-OpenWebUI-User-*) to OpenAI/Ollama
ENABLE_FORWARD_USER_INFO_HEADERS=False
# Bypass SSL Verification for RAG on Websites (PersistentConfig)
ENABLE_WEB_LOADER_SSL_VERIFICATION=True
# SameSite attribute for session cookies: lax | strict | none
WEBUI_SESSION_COOKIE_SAME_SITE=lax
# Secure attribute for session cookies
WEBUI_SESSION_COOKIE_SECURE=False
# SameSite attribute for auth cookies (defaults to session cookie setting)
WEBUI_AUTH_COOKIE_SAME_SITE=lax
# Secure attribute for auth cookies (defaults to session cookie setting)
WEBUI_AUTH_COOKIE_SECURE=False
# Enable authentication (cannot be disabled if users exist)
WEBUI_AUTH=True
# JWT Secret Key (Randomly generated by Docker if not set)
WEBUI_SECRET_KEY=t0p-s3cr3t
# Enable offline mode
OFFLINE_MODE=False
# Resets config.json on startup
RESET_CONFIG_ON_START=False
# Disables potentially unsafe features
SAFE_MODE=False
# Allowed origins for CORS
CORS_ALLOW_ORIGIN=*
# Trust remote code for RAG embedding models from HuggingFace Hub
RAG_EMBEDDING_MODEL_TRUST_REMOTE_CODE=False
# Trust remote code for RAG reranking models from HuggingFace Hub
RAG_RERANKING_MODEL_TRUST_REMOTE_CODE=False
# Auto-update Sentence-Transformer model
RAG_EMBEDDING_MODEL_AUTO_UPDATE=True
# Auto-update reranking model
RAG_RERANKING_MODEL_AUTO_UPDATE=True

# --- Vector Database ---
# Vector DB system: chroma | elasticsearch | milvus | qdrant | opensearch | pgvector
VECTOR_DB=chroma

# --- ChromaDB ---
# ChromaDB tenant
CHROMA_TENANT=default_tenant # Uses chromadb.DEFAULT_TENANT
# ChromaDB database name
CHROMA_DATABASE=default_database # Uses chromadb.DEFAULT_DATABASE
# Remote ChromaDB Server hostname (uses local if not set)
CHROMA_HTTP_HOST=
# Remote ChromaDB Server port
CHROMA_HTTP_PORT=8000
# Comma-separated HTTP headers for ChromaDB requests
CHROMA_HTTP_HEADERS=
# Use SSL for ChromaDB Server connections
CHROMA_HTTP_SSL=False
# Auth provider for remote ChromaDB Server
CHROMA_CLIENT_AUTH_PROVIDER=
# Auth credentials for remote ChromaDB Server (e.g., user:pass)
CHROMA_CLIENT_AUTH_CREDENTIALS=

# --- Elasticsearch ---
# Elasticsearch API key (PersistentConfig)
ELASTICSEARCH_API_KEY=
# Path to CA certificates for Elasticsearch (PersistentConfig)
ELASTICSEARCH_CA_CERTS=
# Elasticsearch cloud ID (PersistentConfig)
ELASTICSEARCH_CLOUD_ID=
# Prefix for Elasticsearch index (PersistentConfig)
ELASTICSEARCH_INDEX_PREFIX=open_webui_collections
# Password for Elasticsearch (PersistentConfig)
ELASTICSEARCH_PASSWORD=
# URL for Elasticsearch instance (PersistentConfig)
ELASTICSEARCH_URL=https://localhost:9200
# Username for Elasticsearch (PersistentConfig)
ELASTICSEARCH_USERNAME=

# --- Milvus ---
# Milvus connection URI (defaults to local file based on DATA_DIR)
MILVUS_URI=
# Milvus database name
MILVUS_DB=default
# Optional Milvus connection token
MILVUS_TOKEN=

# --- OpenSearch ---
# Enable OpenSearch certificate verification
OPENSEARCH_CERT_VERIFY=False
# Password for OpenSearch
OPENSEARCH_PASSWORD=
# Enable SSL for OpenSearch
OPENSEARCH_SSL=True
# URI for OpenSearch
OPENSEARCH_URI=https://localhost:9200
# Username for OpenSearch
OPENSEARCH_USERNAME=

# --- PGVector ---
# PGVector database URL (defaults to DATABASE_URL)
PGVECTOR_DB_URL=
# Max vector length for PGVector initialization
PGVECTOR_INITIALIZE_MAX_VECTOR_LENGTH=1536

# --- Qdrant ---
# API key for Qdrant
QDRANT_API_KEY=
# URI for Qdrant (e.g., http://localhost:6333 or path for local)
QDRANT_URI=
# Use on-disk storage for Qdrant
QDRANT_ON_DISK=False

# --- RAG Content Extraction Engine ---
# Engine: '' (default) | tika | docling | document_intelligence | mistral_ocr (PersistentConfig)
CONTENT_EXTRACTION_ENGINE=
# Mistral OCR API key (PersistentConfig)
MISTRAL_OCR_API_KEY=
# Apache Tika server URL (PersistentConfig)
TIKA_SERVER_URL=http://localhost:9998
# Docling server URL (PersistentConfig)
DOCLING_SERVER_URL=http://docling:5001

# --- Retrieval Augmented Generation (RAG) ---
# Embedding engine: '' (SentenceTransformers) | ollama | openai (PersistentConfig)
RAG_EMBEDDING_ENGINE=
# Embedding model (PersistentConfig)
RAG_EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
# Enable ensemble search with BM25 + ChromaDB + reranking (PersistentConfig)
ENABLE_RAG_HYBRID_SEARCH=False
# Default number of results for embedding (PersistentConfig)
RAG_TOP_K=3
# Default number of results for reranker (PersistentConfig)
RAG_TOP_K_RERANKER=3
# Relevance threshold with reranking (PersistentConfig)
RAG_RELEVANCE_THRESHOLD=0.0
# RAG prompt template (See docs for complex default) (PersistentConfig)
RAG_TEMPLATE=
# Text splitter: character | token (PersistentConfig)
RAG_TEXT_SPLITTER=character
# TikToken cache directory (defaults based on CACHE_DIR)
TIKTOKEN_CACHE_DIR=
# TikToken encoding name (PersistentConfig)
TIKTOKEN_ENCODING_NAME=cl100k_base
# Document chunk size for embeddings (PersistentConfig)
CHUNK_SIZE=1000
# Chunk overlap (PersistentConfig)
CHUNK_OVERLAP=100
# Extract images from PDFs using OCR (PersistentConfig)
PDF_EXTRACT_IMAGES=False
# Max file size (MB) for RAG upload (PersistentConfig)
RAG_FILE_MAX_SIZE=
# Max file count for RAG upload (PersistentConfig)
RAG_FILE_MAX_COUNT=
# Reranking model (PersistentConfig)
RAG_RERANKING_MODEL=
# OpenAI base URL for RAG embeddings (defaults to OPENAI_API_BASE_URL) (PersistentConfig)
RAG_OPENAI_API_BASE_URL=
# OpenAI API key for RAG embeddings (defaults to OPENAI_API_KEY) (PersistentConfig)
RAG_OPENAI_API_KEY=
# Batch size for OpenAI embeddings
RAG_EMBEDDING_OPENAI_BATCH_SIZE=1
# Batch size for RAG embedding (PersistentConfig)
RAG_EMBEDDING_BATCH_SIZE=1
# Ollama API key for RAG (PersistentConfig)
RAG_OLLAMA_API_KEY=
# Ollama base URL for RAG (PersistentConfig)
RAG_OLLAMA_BASE_URL=
# Enable retrieval query generation (PersistentConfig)
ENABLE_RETRIEVAL_QUERY_GENERATION=True
# Prompt template for query generation (See docs for complex default) (PersistentConfig)
QUERY_GENERATION_PROMPT_TEMPLATE=
# Bypass embedding and retrieval process (PersistentConfig)
BYPASS_EMBEDDING_AND_RETRIEVAL=False
# Document Intelligence endpoint (PersistentConfig)
DOCUMENT_INTELLIGENCE_ENDPOINT=
# Document Intelligence key (PersistentConfig)
DOCUMENT_INTELLIGENCE_KEY=
# Enable local web fetch for RAG (PersistentConfig)
ENABLE_RAG_LOCAL_WEB_FETCH=False
# Prefix for RAG embedding content (PersistentConfig)
RAG_EMBEDDING_CONTENT_PREFIX=
# Field name for RAG embedding prefix (PersistentConfig)
RAG_EMBEDDING_PREFIX_FIELD_NAME=
# Prefix for RAG embedding query (PersistentConfig)
RAG_EMBEDDING_QUERY_PREFIX=
# Use full context for RAG (PersistentConfig)
RAG_FULL_CONTEXT=False

# --- Google Drive ---
# Enable Google Drive integration (PersistentConfig)
ENABLE_GOOGLE_DRIVE_INTEGRATION=False
# Client ID for Google Drive (PersistentConfig)
GOOGLE_DRIVE_CLIENT_ID=
# API key for Google Drive (PersistentConfig)
GOOGLE_DRIVE_API_KEY=

# --- OneDrive ---
# Enable OneDrive integration (PersistentConfig)
ENABLE_ONEDRIVE_INTEGRATION=False
# Client ID for OneDrive (PersistentConfig)
ONEDRIVE_CLIENT_ID=

# --- Web Search ---
# Enable web search toggle (PersistentConfig)
ENABLE_WEB_SEARCH=False
# Enable search query generation (PersistentConfig)
ENABLE_SEARCH_QUERY_GENERATION=True
# Trust http_proxy/https_proxy for web search fetching (PersistentConfig)
WEB_SEARCH_TRUST_ENV=False
# Max search results to crawl (PersistentConfig)
WEB_SEARCH_RESULT_COUNT=3
# Concurrent requests to crawl web pages (PersistentConfig)
WEB_SEARCH_CONCURRENT_REQUESTS=10
# Search engine (e.g., searxng, google_pse, brave, ...) (PersistentConfig)
WEB_SEARCH_ENGINE=
# Bypass web search embedding and retrieval (PersistentConfig)
BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL=False
# SearXNG search API URL (<query> replaced) (PersistentConfig)
SEARXNG_QUERY_URL=
# Google PSE API key (PersistentConfig)
GOOGLE_PSE_API_KEY=
# Google PSE engine ID (PersistentConfig)
GOOGLE_PSE_ENGINE_ID=
# Brave Search API key (PersistentConfig)
BRAVE_SEARCH_API_KEY=
# Kagi Search API key (PersistentConfig)
KAGI_SEARCH_API_KEY=
# Mojeek Search API key (PersistentConfig)
MOJEEK_SEARCH_API_KEY=
# Serpstack API key (PersistentConfig)
SERPSTACK_API_KEY=
# Use HTTPS for Serpstack (default True) (PersistentConfig)
SERPSTACK_HTTPS=True
# Serper API key (PersistentConfig)
SERPER_API_KEY=
# Serply API key (PersistentConfig)
SERPLY_API_KEY=
# SearchAPI API key (PersistentConfig)
SEARCHAPI_API_KEY=
# SearchAPI engine (PersistentConfig)
SEARCHAPI_ENGINE=
# Tavily API key (PersistentConfig)
TAVILY_API_KEY=
# Jina API key (PersistentConfig)
JINA_API_KEY=
# Bing Search API endpoint (PersistentConfig)
BING_SEARCH_V7_ENDPOINT=https://api.bing.microsoft.com/v7.0/search
# Bing Search API subscription key (PersistentConfig)
BING_SEARCH_V7_SUBSCRIPTION_KEY=
# Bocha Search API key (PersistentConfig)
BOCHA_SEARCH_API_KEY=
# Exa API key (PersistentConfig)
EXA_API_KEY=
# SerpApi API key (PersistentConfig)
SERPAPI_API_KEY=
# SerpApi engine (PersistentConfig)
SERPAPI_ENGINE=
# Sogou API SID (PersistentConfig)
SOUGOU_API_SID=
# Sogou API SK (PersistentConfig)
SOUGOU_API_SK=
# Tavily extract depth (PersistentConfig)
TAVILY_EXTRACT_DEPTH=basic

# --- Web Loader Configuration ---
# Web loader engine: '' (requests), playwright (PersistentConfig)
WEB_LOADER_ENGINE=
# Remote Playwright browser WebSocket URI (PersistentConfig)
PLAYWRIGHT_WS_URL=
# Firecrawl API base URL (PersistentConfig)
FIRECRAWL_API_BASE_URL=https://api.firecrawl.dev
# Firecrawl API key (PersistentConfig)
FIRECRAWL_API_KEY=
# Perplexity API key (PersistentConfig)
PERPLEXITY_API_KEY=
# Playwright request timeout (PersistentConfig)
PLAYWRIGHT_TIMEOUT=

# --- YouTube Loader ---
# Proxy URL for YouTube loader (PersistentConfig)
YOUTUBE_LOADER_PROXY_URL=
# Language for YouTube video loading (PersistentConfig)
YOUTUBE_LOADER_LANGUAGE=en

# --- Audio ---

# --- Whisper Speech-to-Text (Local) ---
# Whisper model for STT: base | small | medium | large (PersistentConfig)
WHISPER_MODEL=base
# Directory for Whisper model files (defaults based on DATA_DIR)
WHISPER_MODEL_DIR=
# Apply Voice Activity Detection filter to Whisper STT (PersistentConfig)
WHISPER_VAD_FILTER=False
# Auto-update Whisper model
WHISPER_MODEL_AUTO_UPDATE=False

# --- Speech-to-Text (OpenAI) ---
# STT engine: '' (local Whisper) | openai | deepgram | azure (PersistentConfig)
AUDIO_STT_ENGINE=
# STT model for OpenAI endpoints (PersistentConfig)
AUDIO_STT_MODEL=whisper-1
# OpenAI base URL for STT (defaults to OPENAI_API_BASE_URL) (PersistentConfig)
AUDIO_STT_OPENAI_API_BASE_URL=
# OpenAI API key for STT (defaults to OPENAI_API_KEY) (PersistentConfig)
AUDIO_STT_OPENAI_API_KEY=

# --- Speech-to-Text (Azure) ---
# Azure API key for STT (PersistentConfig)
AUDIO_STT_AZURE_API_KEY=
# Azure region for STT (PersistentConfig)
AUDIO_STT_AZURE_REGION=
# Azure locales for STT (PersistentConfig)
AUDIO_STT_AZURE_LOCALES=

# --- Speech-to-Text (Deepgram) ---
# Deepgram API key for STT (PersistentConfig)
DEEPGRAM_API_KEY=

# --- Text-to-Speech ---
# API key for TTS (specific to engine) (PersistentConfig)
AUDIO_TTS_API_KEY=
# TTS engine: '' (WebAPI) | azure | elevenlabs | openai | transformers (PersistentConfig)
AUDIO_TTS_ENGINE=
# OpenAI TTS model (PersistentConfig)
AUDIO_TTS_MODEL=tts-1
# OpenAI TTS voice (PersistentConfig)
AUDIO_TTS_VOICE=alloy
# OpenAI TTS split on (PersistentConfig)
AUDIO_TTS_SPLIT_ON=punctuation

# --- Azure Text-to-Speech ---
# Azure TTS region (PersistentConfig)
AUDIO_TTS_AZURE_SPEECH_REGION=
# Azure TTS output format (PersistentConfig)
AUDIO_TTS_AZURE_SPEECH_OUTPUT_FORMAT=

# --- OpenAI Text-to-Speech ---
# OpenAI base URL for TTS (defaults to OPENAI_API_BASE_URL) (PersistentConfig)
AUDIO_TTS_OPENAI_API_BASE_URL=
# OpenAI API key for TTS (defaults to OPENAI_API_KEY) (PersistentConfig)
AUDIO_TTS_OPENAI_API_KEY=

# --- Image Generation ---
# Engine: openai | comfyui | automatic1111 | gemini (PersistentConfig)
IMAGE_GENERATION_ENGINE=openai
# Enable image generation features (PersistentConfig)
ENABLE_IMAGE_GENERATION=False
# Enable image prompt generation (PersistentConfig)
ENABLE_IMAGE_PROMPT_GENERATION=True
# Prompt template for image prompt generation (See docs for complex default) (PersistentConfig)
IMAGE_PROMPT_GENERATION_PROMPT_TEMPLATE=
# Default image size (PersistentConfig)
IMAGE_SIZE=512x512
# Default iteration steps (ComfyUI/AUTOMATIC1111) (PersistentConfig)
IMAGE_STEPS=50
# Default model for image generation (PersistentConfig)
IMAGE_GENERATION_MODEL=

# --- AUTOMATIC1111 ---
# AUTOMATIC1111 Stable Diffusion API URL (PersistentConfig)
AUTOMATIC1111_BASE_URL=
# AUTOMATIC1111 API authentication (e.g., user:pass) (PersistentConfig)
AUTOMATIC1111_API_AUTH=
# AUTOMATIC1111 CFG scale (PersistentConfig)
AUTOMATIC1111_CFG_SCALE=
# AUTOMATIC1111 sampler (PersistentConfig)
AUTOMATIC1111_SAMPLER=
# AUTOMATIC1111 scheduler (PersistentConfig)
AUTOMATIC1111_SCHEDULER=

# --- ComfyUI ---
# ComfyUI image generation API URL (PersistentConfig)
COMFYUI_BASE_URL=
# ComfyUI API key (PersistentConfig)
COMFYUI_API_KEY=
# ComfyUI workflow (JSON, see docs for complex default) (PersistentConfig)
COMFYUI_WORKFLOW=

# --- Gemini ---
# Gemini API URL (PersistentConfig)
GEMINI_API_BASE_URL=
# Gemini API key (PersistentConfig)
GEMINI_API_KEY=
# Gemini image generation API URL (PersistentConfig)
IMAGES_GEMINI_API_BASE_URL=
# Gemini API key for image generation (PersistentConfig)
IMAGES_GEMINI_API_KEY=

# --- OpenAI DALL-E ---
# OpenAI base URL for DALL-E (defaults to OPENAI_API_BASE_URL) (PersistentConfig)
IMAGES_OPENAI_API_BASE_URL=
# OpenAI API key for DALL-E (defaults to OPENAI_API_KEY) (PersistentConfig)
IMAGES_OPENAI_API_KEY=

# --- OAuth ---
# Enable account creation via OAuth signup (PersistentConfig)
ENABLE_OAUTH_SIGNUP=False
# Merge OAuth accounts with existing accounts by email (unsafe) (PersistentConfig)
OAUTH_MERGE_ACCOUNTS_BY_EMAIL=False
# Trusted request header for SSO email
WEBUI_AUTH_TRUSTED_EMAIL_HEADER=
# Trusted request header for SSO username
WEBUI_AUTH_TRUSTED_NAME_HEADER=

# --- Google OAuth ---
# Google Client ID (PersistentConfig)
GOOGLE_CLIENT_ID=
# Google Client Secret (PersistentConfig)
GOOGLE_CLIENT_SECRET=
# Google OAuth scope (PersistentConfig)
GOOGLE_OAUTH_SCOPE=openid email profile
# Google OAuth redirect URI (defaults based on backend URL) (PersistentConfig)
GOOGLE_REDIRECT_URI=

# --- Microsoft OAuth ---
# Microsoft Client ID (PersistentConfig)
MICROSOFT_CLIENT_ID=
# Microsoft Client Secret (PersistentConfig)
MICROSOFT_CLIENT_SECRET=
# Microsoft Tenant ID (PersistentConfig)
MICROSOFT_CLIENT_TENANT_ID=
# Microsoft OAuth scope (PersistentConfig)
MICROSOFT_OAUTH_SCOPE=openid email profile
# Microsoft OAuth redirect URI (defaults based on backend URL) (PersistentConfig)
MICROSOFT_REDIRECT_URI=

# --- GitHub OAuth ---
# GitHub Client ID (PersistentConfig)
GITHUB_CLIENT_ID=
# GitHub Client Secret (PersistentConfig)
GITHUB_CLIENT_SECRET=
# GitHub OAuth scope (PersistentConfig)
GITHUB_CLIENT_SCOPE=user:email
# GitHub OAuth redirect URI (defaults based on backend URL) (PersistentConfig)
GITHUB_CLIENT_REDIRECT_URI=

# --- OpenID (OIDC) ---
# OIDC Client ID (PersistentConfig)
OAUTH_CLIENT_ID=
# OIDC Client Secret (PersistentConfig)
OAUTH_CLIENT_SECRET=
# OIDC Provider URL (.well-known/openid-configuration) (PersistentConfig)
OPENID_PROVIDER_URL=
# OIDC Redirect URI (defaults based on backend URL) (PersistentConfig)
OPENID_REDIRECT_URI=
# OIDC Scopes (openid and email required) (PersistentConfig)
OAUTH_SCOPES=openid email profile
# OIDC Code Challenge Method (e.g., S256) (PersistentConfig)
OAUTH_CODE_CHALLENGE_METHOD=
# OIDC Provider Name (PersistentConfig)
OAUTH_PROVIDER_NAME=SSO
# OIDC Username Claim (PersistentConfig)
OAUTH_USERNAME_CLAIM=name
# OIDC Email Claim (PersistentConfig)
OAUTH_EMAIL_CLAIM=email
# OIDC Picture (avatar) Claim (PersistentConfig)
OAUTH_PICTURE_CLAIM=picture
# OIDC Group Claim (PersistentConfig)
OAUTH_GROUP_CLAIM=groups
# Enable role management via OAuth delegation (PersistentConfig)
ENABLE_OAUTH_ROLE_MANAGEMENT=False
# Enable OAuth group management (PersistentConfig)
ENABLE_OAUTH_GROUP_MANAGEMENT=False
# OIDC Roles Claim (PersistentConfig)
OAUTH_ROLES_CLAIM=roles
# Allowed roles from OIDC token (comma-separated) (PersistentConfig)
OAUTH_ALLOWED_ROLES=user,admin
# Roles considered administrators (comma-separated) (PersistentConfig)
OAUTH_ADMIN_ROLES=admin
# Allowed domains for OAuth auth (comma-separated, * for all) (PersistentConfig)
OAUTH_ALLOWED_DOMAINS=*

# --- LDAP ---
# Enable LDAP authentication (PersistentConfig)
ENABLE_LDAP=False
# Label of the LDAP server (PersistentConfig)
LDAP_SERVER_LABEL=
# Hostname of the LDAP server (PersistentConfig)
LDAP_SERVER_HOST=localhost
# Port of the LDAP server (PersistentConfig)
LDAP_SERVER_PORT=389
# Attribute for mail (PersistentConfig)
LDAP_ATTRIBUTE_FOR_MAIL=
# Attribute for username (PersistentConfig)
LDAP_ATTRIBUTE_FOR_USERNAME=
# Distinguished name for LDAP application (PersistentConfig)
LDAP_APP_DN=
# Password for LDAP application (PersistentConfig)
LDAP_APP_PASSWORD=
# Base to search for LDAP auth (PersistentConfig)
LDAP_SEARCH_BASE=
# Single filter for LDAP search (alternative to LDAP_SEARCH_FILTERS) (PersistentConfig)
LDAP_SEARCH_FILTER=
# Filters for LDAP search (JSON string or similar, see docs) (PersistentConfig)
LDAP_SEARCH_FILTERS=
# Enable TLS for LDAP connection (PersistentConfig)
LDAP_USE_TLS=True
# Path to LDAP CA certificate file (PersistentConfig)
LDAP_CA_CERT_FILE=
# Ciphers for LDAP connection (PersistentConfig)
LDAP_CIPHERS=ALL

# --- User Permissions ---

# --- Chat Permissions ---
# Allow access to chat controls (PersistentConfig)
USER_PERMISSIONS_CHAT_CONTROLS=True
# Allow file upload to chats (PersistentConfig)
USER_PERMISSIONS_CHAT_FILE_UPLOAD=True
# Allow deleting chats (PersistentConfig)
USER_PERMISSIONS_CHAT_DELETE=True
# Allow editing chats (PersistentConfig)
USER_PERMISSIONS_CHAT_EDIT=True
# Allow Speech-to-Text in chats (PersistentConfig)
USER_PERMISSIONS_CHAT_STT=True
# Allow Text-to-Speech in chats (PersistentConfig)
USER_PERMISSIONS_CHAT_TTS=True
# Allow making calls in chats (PersistentConfig)
USER_PERMISSIONS_CHAT_CALL=True
# Allow using multiple models in chats (PersistentConfig)
USER_PERMISSIONS_CHAT_MULTIPLE_MODELS=True
# Allow creating temporary chats (PersistentConfig)
USER_PERMISSIONS_CHAT_TEMPORARY=True
# Enforce temporary chats for users (PersistentConfig)
USER_PERMISSIONS_CHAT_TEMPORARY_ENFORCED=False

# --- Feature Permissions ---
# Allow access to direct tool servers (PersistentConfig)
USER_PERMISSIONS_FEATURES_DIRECT_TOOL_SERVERS=False
# Allow using web search feature (PersistentConfig)
USER_PERMISSIONS_FEATURES_WEB_SEARCH=True
# Allow using image generation feature (PersistentConfig)
USER_PERMISSIONS_FEATURES_IMAGE_GENERATION=True
# Allow using code interpreter feature (PersistentConfig)
USER_PERMISSIONS_FEATURES_CODE_INTERPRETER=True

# --- Workspace Permissions ---
# Allow access to workspace models (PersistentConfig)
USER_PERMISSIONS_WORKSPACE_MODELS_ACCESS=False
# Allow access to workspace knowledge (PersistentConfig)
USER_PERMISSIONS_WORKSPACE_KNOWLEDGE_ACCESS=False
# Allow access to workspace prompts (PersistentConfig)
USER_PERMISSIONS_WORKSPACE_PROMPTS_ACCESS=False
# Allow access to workspace tools (PersistentConfig)
USER_PERMISSIONS_WORKSPACE_TOOLS_ACCESS=False
# Allow public sharing of workspace models (PersistentConfig)
USER_PERMISSIONS_WORKSPACE_MODELS_ALLOW_PUBLIC_SHARING=False
# Allow public sharing of workspace knowledge (PersistentConfig)
USER_PERMISSIONS_WORKSPACE_KNOWLEDGE_ALLOW_PUBLIC_SHARING=False
# Allow public sharing of workspace prompts (PersistentConfig)
USER_PERMISSIONS_WORKSPACE_PROMPTS_ALLOW_PUBLIC_SHARING=False
# Allow public sharing of workspace tools (PersistentConfig)
USER_PERMISSIONS_WORKSPACE_TOOLS_ALLOW_PUBLIC_SHARING=False

# --- Misc Environment Variables ---

# --- Lago Integration ---
# Lago API URL
LAGO_API_URL=
# Lago API Key
LAGO_API_KEY=
# Lago Trial Plan Code (used for auto-subscribing new users)
LAGO_TRIAL_PLAN_CODE=

# --- Cloud Storage ---
# Storage provider: '' (local) | s3 | gcs | azure
STORAGE_PROVIDER=
# S3 Access Key ID
S3_ACCESS_KEY_ID=
# S3 Addressing Style (e.g., path, virtual)
S3_ADDRESSING_STYLE=
# S3 Bucket Name
S3_BUCKET_NAME=
# S3 Endpoint URL (for MinIO, etc.)
S3_ENDPOINT_URL=
# S3 Key Prefix
S3_KEY_PREFIX=
# S3 Region Name
S3_REGION_NAME=
# S3 Secret Access Key
S3_SECRET_ACCESS_KEY=
# S3 Use Accelerate Endpoint
S3_USE_ACCELERATE_ENDPOINT=False
# Google Application Credentials JSON content
GOOGLE_APPLICATION_CREDENTIALS_JSON=
# GCS Bucket Name
GCS_BUCKET_NAME=
# Azure Storage Endpoint URL
AZURE_STORAGE_ENDPOINT=
# Azure Storage Container Name
AZURE_STORAGE_CONTAINER_NAME=
# Azure Storage Access Key
AZURE_STORAGE_KEY=

# --- Database Pool ---
# Database URL (Default: sqlite:///${DATA_DIR}/webui.db)
DATABASE_URL=sqlite:///${DATA_DIR}/webui.db
# Database pool size (0 disables pooling)
DATABASE_POOL_SIZE=0
# Database pool max overflow
DATABASE_POOL_MAX_OVERFLOW=0
# Database pool timeout (seconds)
DATABASE_POOL_TIMEOUT=30
# Database pool recycle time (seconds)
DATABASE_POOL_RECYCLE=3600

# --- Redis ---
# Redis URL for app-state (e.g., redis://localhost:6379/0)
REDIS_URL=
# Comma-separated Redis Sentinels for app state
REDIS_SENTINEL_HOSTS=
# Sentinel port for app state Redis
REDIS_SENTINEL_PORT=26379
# Enable websocket support (requires Redis)
ENABLE_WEBSOCKET_SUPPORT=False
# Websocket manager (only redis supported?)
WEBSOCKET_MANAGER=redis
# Redis URL for websocket (defaults to REDIS_URL)
WEBSOCKET_REDIS_URL=
# Comma-separated Redis Sentinels for websocket
WEBSOCKET_SENTINEL_HOSTS=
# Sentinel port for websocket Redis
WEBSOCKET_SENTINEL_PORT=26379

# --- Uvicorn Settings ---
# Number of Uvicorn worker processes (Recommend 1 for K8s)
UVICORN_WORKERS=1

# --- Proxy Settings ---
# HTTP proxy URL
http_proxy=
# HTTPS proxy URL
https_proxy=
# Comma-separated list of domains to bypass proxy
no_proxy=

# --- Install required packages ---
# Additional pip command-line options
PIP_OPTIONS=
# Custom pip package index options (e.g., --extra-index-url)
PIP_PACKAGE_INDEX_OPTIONS=